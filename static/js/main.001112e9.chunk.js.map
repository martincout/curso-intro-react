{"version":3,"sources":["TodoContext/index.js","TodoContext/useLocalStorage.js","TodoCounter/index.js","TodoSearch/index.js","TodoList/index.js","TodoItem/index.js","CreateTodoButton/index.js","TodoForm/index.js","Modal/index.js","TodoLoader/index.js","EmptyTodo/index.js","TodoError/index.js","App/AppUI.js","App/index.js","index.js"],"names":["TodoContext","React","createContext","TodoProvider","props","itemName","initialValue","useState","error","setError","loading","setLoading","item","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","stringifyItem","useLocalStorage","todos","saveTodos","searchValue","setSearchValue","openModal","setOpenModal","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","includes","Provider","value","addTodo","newTodos","push","completeTodo","todoIndex","findIndex","deleteTodo","splice","children","TodoCounter","useContext","className","TodoSearch","placeholder","onChange","event","target","TodoList","TodoItem","onClick","onComplete","onDelete","CreateTodoButton","msg","prevState","TodoForm","newTodoValue","setNewTodoValue","onSubmit","preventDefault","type","Modal","reactDom","createPortal","document","getElementById","TodoLoader","EmptyTodo","TodoError","AppUi","Fragment","map","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.001112e9.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useLocalStorage } from './useLocalStorage';\r\n\r\nconst TodoContext = React.createContext();\r\n\r\nfunction TodoProvider(props) {\r\n  const {\r\n    item: todos,\r\n    saveItem: saveTodos,\r\n    loading,\r\n    error,\r\n  } = useLocalStorage('TODOS_V1', []);\r\n  const [searchValue, setSearchValue] = React.useState('');\r\n  const [openModal, setOpenModal] = React.useState(false);\r\n  const completedTodos = todos.filter(todo => !!todo.completed).length;\r\n  const totalTodos = todos.length;\r\n\r\n  let searchedTodos = [];\r\n\r\n  if (!searchValue.length >= 1) {\r\n    searchedTodos = todos;\r\n  } else {\r\n    searchedTodos = todos.filter(todo => {\r\n      const todoText = todo.text.toLowerCase();\r\n      const searchText = searchValue.toLowerCase();\r\n      return todoText.includes(searchText);\r\n    });\r\n  }\r\n\r\n  const addTodo = (text) => {\r\n    const newTodos = [...todos];\r\n    newTodos.push({\r\n      completed: false,\r\n      text\r\n    })\r\n    saveTodos(newTodos);\r\n    //Si pongo en SetTodos(todos) react no re-renderiza de nuevo TodoItem, solo cuando hago un cambio en el codigo.\r\n  };\r\n\r\n  const completeTodo = (text) => {\r\n    const todoIndex = todos.findIndex(todo => todo.text === text);\r\n    const newTodos = [...todos];\r\n    newTodos[todoIndex].completed = !newTodos[todoIndex].completed;\r\n    saveTodos(newTodos);\r\n    //Si pongo en SetTodos(todos) react no re-renderiza de nuevo TodoItem, solo cuando hago un cambio en el codigo.\r\n  };\r\n\r\n  const deleteTodo = (text) => {\r\n    const todoIndex = todos.findIndex(todo => todo.text === text);\r\n    const newTodos = [...todos];\r\n    newTodos.splice(todoIndex, 1);\r\n    saveTodos(newTodos);\r\n  };\r\n  \r\n  return (\r\n    <TodoContext.Provider value={{\r\n      loading,\r\n      error,\r\n      totalTodos,\r\n      completedTodos,\r\n      searchValue,\r\n      setSearchValue,\r\n      searchedTodos,\r\n      addTodo,\r\n      completeTodo,\r\n      deleteTodo,\r\n      openModal,\r\n      setOpenModal\r\n    }}>\r\n      {props.children}\r\n    </TodoContext.Provider>\r\n  );\r\n}\r\n\r\nexport { TodoContext, TodoProvider };","import React from 'react';\r\n\r\nfunction useLocalStorage(itemName, initialValue) {\r\n    const [error, setError] = React.useState(false);\r\n    const [loading, setLoading] = React.useState(true);\r\n    const [item, setItem] = React.useState(initialValue);\r\n  \r\n    React.useEffect(() => {\r\n      setTimeout(() => {\r\n        try {\r\n          //Cargamos los TODOs del localStorage y guardamos el estado en ITEM\r\n          const localStorageItem = localStorage.getItem(itemName);\r\n          let parsedItem;\r\n  \r\n          if (!localStorageItem) {\r\n            localStorage.setItem(itemName, JSON.stringify(initialValue));\r\n            parsedItem = initialValue;\r\n          } else {\r\n            parsedItem = JSON.parse(localStorageItem);\r\n          }\r\n          setItem(parsedItem);\r\n          setLoading(false);\r\n        } catch (error) {\r\n          setError(error);\r\n        }\r\n      }, 2000)\r\n    })\r\n  \r\n    const saveItem = (newItem) => {\r\n      try {\r\n        const stringifyItem = JSON.stringify(newItem);\r\n        localStorage.setItem(itemName, stringifyItem);\r\n        setItem(newItem);\r\n      } catch (error) {\r\n        setError(error);\r\n      }\r\n    };\r\n    return {\r\n      item,\r\n      saveItem,\r\n      loading,\r\n      error\r\n    }\r\n  }\r\n\r\n  export {useLocalStorage};","import React from 'react';\nimport { TodoContext } from '../TodoContext';\nimport './TodoCounter.css';\n\nfunction TodoCounter() {\n  const {totalTodos,completedTodos} = React.useContext(TodoContext);\n\n  return (\n    <h2 className=\"TodoCounter\">Has completado {completedTodos} de {totalTodos} TODOs</h2>\n  );\n}\n\nexport { TodoCounter };\n","import React from 'react';\nimport { TodoContext } from '../TodoContext';\nimport './TodoSearch.css';\n\nfunction TodoSearch() {\n  const {searchValue, setSearchValue} = React.useContext(TodoContext);\n  // [\n  //   'Juan',\n  //   setState('Enrique')\n  // ]\n\n  const onSearchValueChange = (event) => {\n    setSearchValue(event.target.value);\n  }\n  return (\n    <input \n    className=\"TodoSearch\"\n     placeholder=\"Cebolla\" \n     value={searchValue}\n    onChange={onSearchValueChange}/>\n  );\n}\n\nexport { TodoSearch };\n","import React from 'react';\nimport './TodoList.css'\n\nfunction TodoList(props) {\n  return (\n    <section>\n      <ul>\n        {props.children}\n      </ul>\n    </section>\n  );\n}\n\nexport { TodoList };\n","import React from 'react';\nimport './TodoItem.css';\nimport { FaCheckCircle } from 'react-icons/fa';\nimport {TiDelete} from 'react-icons/ti';\nfunction TodoItem(props) {\n\n  return (\n    <li className=\"TodoItem\">\n      <span className={`Icon Icon-check ${props.completed && 'Icon-check--active'}`}\n        onClick={props.onComplete}>\n        < FaCheckCircle />\n      </span>\n      <p className={`TodoItem-p ${props.completed && 'TodoItem-p--complete'}`}\n        >\n        {props.text}\n      </p>\n      <span className=\"Icon Icon-delete\"\n      onClick={props.onDelete}>\n        < TiDelete />\n      </span>\n    </li>\n  );\n}\n\nexport { TodoItem };\n","import React from 'react';\nimport './CreateTodoButton.css';\n\nfunction CreateTodoButton(props) {\n  const onClickButton = (msg) => {\n    props.setOpenModal(prevState => !prevState);\n  }\n\n  return (\n    <button \n      className=\"CreateTodoButton\"\n      onClick={onClickButton}\n    >+</button>\n  );\n}\n\nexport { CreateTodoButton };\n","import React from 'react'\r\nimport { TodoContext } from '../TodoContext'\r\nimport './TodoForm.css';\r\n\r\nexport default function TodoForm() {\r\n    const [newTodoValue, setNewTodoValue] = React.useState('');\r\n    const {\r\n        addTodo,\r\n        setOpenModal\r\n    } = React.useContext(TodoContext);\r\n\r\n    const onCancel = () => {\r\n        setOpenModal(false)\r\n    }\r\n    const onChange = (event) => {\r\n        setNewTodoValue(event.target.value)\r\n    }\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        if(event.target.value !== \"\"){\r\n            addTodo(newTodoValue);\r\n            setOpenModal(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} >\r\n            <label>Escribe tu nuevo TODO</label>\r\n            <textarea\r\n                placeholder='Cortar cebolla'\r\n                value={newTodoValue}\r\n                onChange={onChange}\r\n            ></textarea>\r\n            <div className='TodoForm-buttonContainer'>\r\n                <button\r\n                    onClick={onCancel}\r\n                    type=\"button\"\r\n                    className='TodoForm-button TodoForm-button-cancel'\r\n                >\r\n                    Cancelar\r\n                </button>\r\n                <button\r\n                    type=\"submit\"\r\n                    className='TodoForm-button TodoForm-button-add'\r\n                >\r\n                    Añadir\r\n                </button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport { TodoForm };","import reactDom from 'react-dom'\r\nimport \"./Modal.css\";\r\n\r\nexport default function Modal({ children }) {\r\n  return reactDom.createPortal(\r\n      <div className='ModalBackground'>\r\n          {children}\r\n      </div>,\r\n      document.getElementById('modal')\r\n  );\r\n}\r\n\r\nexport {Modal};\r\n","import React from \"react\"\r\nimport './TodoLoader.css'\r\n\r\nconst TodoLoader = (props) => (\r\n  <div className=\"Loading-Container\">\r\n    <span className=\"Loading-Dot\"></span>\r\n    <span className=\"Loading-Dot\"></span>\r\n    <span className=\"Loading-Dot\"></span>\r\n  </div>\r\n)\r\n\r\nexport { TodoLoader }","import React from 'react'\r\n\r\nexport default function EmptyTodo() {\r\n  return (\r\n    <p>¡Crea tu primer TODO!</p>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function TodoError() {\r\n  return (\r\n    <p>Hubo un error al cargar los TODOs :(</p>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { TodoCounter } from '../TodoCounter';\r\nimport { TodoSearch } from '../TodoSearch';\r\nimport { TodoList } from '../TodoList';\r\nimport { TodoItem } from '../TodoItem';\r\nimport { CreateTodoButton } from '../CreateTodoButton';\r\nimport { TodoContext } from '../TodoContext';\r\nimport TodoForm from '../TodoForm';\r\nimport Modal from '../Modal';\r\nimport {TodoLoader} from '../TodoLoader';\r\nimport EmptyTodo from '../EmptyTodo';\r\nimport TodoError from '../TodoError';\r\n\r\nexport default function AppUi() {\r\n    const {\r\n        error,\r\n        loading,\r\n        searchedTodos,\r\n        completeTodo,\r\n        deleteTodo,\r\n        openModal,\r\n        setOpenModal\r\n    } = React.useContext(TodoContext);\r\n    return (\r\n        <React.Fragment>\r\n            <TodoCounter />\r\n            <TodoSearch />\r\n            <TodoList>\r\n                {error && <TodoError/>}\r\n                {loading && <TodoLoader/>}\r\n                {(!loading && !searchedTodos.length) && <EmptyTodo></EmptyTodo>}\r\n\r\n                {searchedTodos.map(todo => (\r\n                    <TodoItem\r\n                        key={todo.text}\r\n                        text={todo.text}\r\n                        completed={todo.completed}\r\n                        onComplete={() => completeTodo(todo.text)}\r\n                        onDelete={() => deleteTodo(todo.text)}\r\n                    />\r\n                ))}\r\n            </TodoList>\r\n            {openModal && (\r\n                <Modal>\r\n                    <TodoForm></TodoForm>\r\n                </Modal>\r\n            )}\r\n            \r\n            <CreateTodoButton \r\n                setOpenModal = {setOpenModal}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React from 'react';\nimport { TodoProvider } from '../TodoContext';\nimport AppUI from './AppUI';\n\n// import './App.css';\n\n// const defaultTodos = [\n//   { text: 'Cortar cebolla', completed: true },\n//   { text: 'Tomar el cursso de intro a React', completed: false },\n//   { text: 'Llorar con la llorona', completed: false },\n//   { text: 'LALALALAA', completed: false },\n// ];\n\nfunction App() {\n \n  return (\n    <TodoProvider>\n      <AppUI />\n    </TodoProvider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}